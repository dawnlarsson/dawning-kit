#!/bin/sh

# Temporary, going to clean this up later
size_fmt() {
        local size=$1
        local formatted_size1

        if [ "$size" -lt 1024 ]; then
                formatted_size="${size} B"
        elif [ "$size" -lt 1048576 ]; then # KB
                local kb_int=$((size / 1024))
                local kb_rem=$((size % 1024))
                local kb_dec=$(((kb_rem * 10) / 1024))
                formatted_size="${kb_int}.${kb_dec} KB"
        else # MB
                local mb_int=$((size / 1048576))
                local mb_rem=$((size % 1048576))
                local mb_dec=$(((mb_rem * 10) / 1048576))
                formatted_size="${mb_int}.${mb_dec} MB"
        fi
        echo "$formatted_size"
}

size() {
        local size=$(stat -c%s "$1")
        local size_fmt=$(size_fmt "$size")
        echo "$1: $size bytes ($size_fmt)"
}



# this is a hacky... todo fixup
verbose=false
if [ "$1" = "-v" ]; then
        verbose=true
        source_file=${2:-"src/main.c"}
        output_file=${3:-"bin/$(basename "$(pwd)")"}
else
        source_file=${1:-"src/main.c"}
        output_file=${2:-"bin/$(basename "$(pwd)")"}
fi

compiler="gcc"

flags_base=" -static -s -flto -nostdlib -nostartfiles -ffreestanding -fno-builtin"
flags_base+=" -Qn -Wl,--build-id=none -Wl,--gc-sections -Wl,--strip-all -Wl,--strip-debug -Wl,-x -Wl,-s -Wl,--no-warn-rwx-segments"
flags_base+=" -Wl,-nmagic"

flags_base+=" -O2"

# more aggressive flags
flags_base+=" -fno-asynchronous-unwind-tables -fomit-frame-pointer -fno-stack-protector"

# VERY aggressive flags
flags_base+=" -fno-semantic-interposition -D_FORTIFY_SOURCE=0 -fno-unwind-tables -fno-plt -fno-PIE -fno-pie -fno-stack-clash-protection"

mkdir -p bin

$compiler $source_file -o $output_file $flags_base $suppress -Wl,-e,_start

build_result=$?

if [ "$verbose" = true ]; then
        size $output_file
fi

chmod +x $output_file

exit $build_result
